[{"C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\index.js":"1","C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\reportWebVitals.js":"2","C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\Containers\\App.jsx":"3","C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\Components\\ReactRogue\\ReactRogue.jsx":"4","C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\utilities\\InputManager.js":"5","C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\NPCs\\Player.js":"6","C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\World\\World.js":"7","C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\World\\Spawner.js":"8","C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\Objects\\Loot.js":"9","C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\World\\Entity.js":"10","C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\NPCs\\Monster.js":"11","C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\Config\\levelConstants.js":"12","C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\Config\\monsterTable.js":"13","C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\Config\\lootTable.js":"14","C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\Objects\\Stairs.js":"15","C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\utilities\\damageCalculator.js":"16","C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\ui\\Menu.js":"17"},{"size":493,"mtime":1608920345342,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":234,"mtime":1608920816332,"results":"21","hashOfConfig":"19"},{"size":3959,"mtime":1609812389522,"results":"22","hashOfConfig":"19"},{"size":1010,"mtime":1609809453735,"results":"23","hashOfConfig":"19"},{"size":682,"mtime":1609808411613,"results":"24","hashOfConfig":"19"},{"size":3160,"mtime":1609180960811,"results":"25","hashOfConfig":"19"},{"size":1374,"mtime":1609191458920,"results":"26","hashOfConfig":"19"},{"size":287,"mtime":1609169316426,"results":"27","hashOfConfig":"19"},{"size":649,"mtime":1609168572777,"results":"28","hashOfConfig":"19"},{"size":1064,"mtime":1609808896612,"results":"29","hashOfConfig":"19"},{"size":99,"mtime":1609812417574,"results":"30","hashOfConfig":"19"},{"size":648,"mtime":1609808543336,"results":"31","hashOfConfig":"19"},{"size":375,"mtime":1609188461028,"results":"32","hashOfConfig":"19"},{"size":834,"mtime":1609190952058,"results":"33","hashOfConfig":"19"},{"size":180,"mtime":1609808773864,"results":"34","hashOfConfig":"19"},{"size":219,"mtime":1609811118343,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1ih1hw6",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\index.js",[],["74","75"],"C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\reportWebVitals.js",[],"C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\Containers\\App.jsx",[],"C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\Components\\ReactRogue\\ReactRogue.jsx",["76"],"import React, { useRef, useEffect, useState } from 'react';\r\nimport './reset.css';\r\nimport './ReactRogue.css';\r\nimport InputManager from '../../utilities/InputManager';\r\nimport Spawner from '../../World/Spawner';\r\nimport World from '../../World/World';\r\nimport Menu from '../../ui/Menu';\r\nimport levelConstants from '../../Config/levelConstants';\r\n\r\nconst ReactRogue = ({ width, height, tileSize }) => {\r\n  const canvasRef = useRef();\r\n  let inputManager = new InputManager();\r\n  // const [player, setPlayer] = useState(new Player(1, 2, tileSize));\r\n  const [world, setWorld] = useState(new World(width, height, tileSize));\r\n  const [menu, setMenu] = useState(new Menu(false));\r\n\r\n  const handleInput = (action, data) => {\r\n    if (action === 'open') {\r\n      console.log('open');\r\n      let newMenu = new Menu();\r\n      Object.assign(newMenu, menu);\r\n      newMenu.toggleMenu();\r\n      setMenu(newMenu);\r\n      let newWorld = new World();\r\n      Object.assign(newWorld, world);\r\n      setWorld(newWorld);\r\n      return;\r\n    }\r\n    if (menu.open) {\r\n      let newMenu = new Menu();\r\n      Object.assign(newMenu, menu);\r\n      console.log(world.player.inventory.length);\r\n      console.log(data.y);\r\n      console.log(menu.index);\r\n      if (menu.index >= (world.player.inventory.length -1) && data.y > 0) {\r\n        newMenu.setIndex(0);\r\n      } else {\r\n        if (menu.index <= 0) {\r\n          newMenu.setIndex(world.player.inventory.length -1);\r\n        } else {\r\n          newMenu.setIndex(menu.index + data.y);\r\n        }\r\n        \r\n      }\r\n      setMenu(newMenu);\r\n      let newWorld = new World();\r\n      Object.assign(newWorld, world);\r\n      setWorld(newWorld);\r\n      console.log('menu open');\r\n      return;\r\n    }\r\n    console.log(`handle input: ${action}:${JSON.stringify(data)}`);\r\n    let newWorld = new World();\r\n    Object.assign(newWorld, world);\r\n    newWorld.movePlayer(data.x, data.y);\r\n    setWorld(newWorld);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('Create Map!');\r\n    let newWorld = new World();\r\n    Object.assign(newWorld, world);\r\n    newWorld.createCellularMap();\r\n    newWorld.moveToSpace(world.player);\r\n    let spawner = new Spawner(newWorld);\r\n    spawner.spawnLoot(levelConstants.spawnLoot);\r\n    spawner.spawnMonsters(levelConstants.spawnMonsters);\r\n    spawner.spawnStairs();\r\n    setWorld(newWorld);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('Bind input');\r\n    inputManager.bindKeys();\r\n    inputManager.subscribe(handleInput);\r\n    return () => {\r\n      inputManager.unbindKeys();\r\n      inputManager.unsubscribe(handleInput);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"Draw to canvas\")\r\n    const ctx = canvasRef.current.getContext('2d');\r\n    ctx.clearRect(0, 0, width * tileSize, height * tileSize);\r\n    world.draw(ctx);\r\n  })\r\n\r\n  return (\r\n  <div className=\"game-wrapper\">\r\n    <canvas \r\n    ref={canvasRef}  \r\n    width={width * tileSize} \r\n    height={height * tileSize} \r\n    style={{ border: '1px solid black',\r\n    background: 'DimGray' }}\r\n    ></canvas>\r\n    <div className=\"detail-wrapper\">\r\n      <div className=\"sector-label\">\r\n        Inventory\r\n      </div>\r\n      <ul className=\"inventory\">\r\n        {world.player.inventory.map((item, index) => {\r\n          let itemClass = '';\r\n          if (index === menu.index && menu.open) {\r\n            itemClass += 'active';\r\n          }\r\n          return (\r\n            <li key={index} className={itemClass}>{item.attributes.ascii} {item.attributes.name}</li>\r\n          )\r\n        })}\r\n      </ul>\r\n      <div className=\"sector-label\">\r\n        Combat Log\r\n      </div>\r\n      <ul className=\"combat-log\">\r\n        {world.history.map((entry, index) => {\r\n          return (\r\n            <li key={index}>{entry}</li>\r\n          )\r\n        })}\r\n      </ul>\r\n    </div>\r\n    <div className=\"stats-wrapper\">\r\n      <p>Player</p>\r\n      <p>Gold: {world.player.attributes.gold}</p>\r\n    </div>\r\n  </div>)\r\n}\r\n\r\nexport default ReactRogue;","C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\utilities\\InputManager.js",["77"],"class InputManager {\r\n  observers = [];\r\n\r\n  subscribe(fn) {\r\n    this.observers.push(fn);\r\n  }\r\n\r\n  unsubscribe(fn) {\r\n    this.observers = this.observers.filter( subscriber => subscriber !== fn);\r\n  }\r\n\r\n  broadcast(action, data) {\r\n    this.observers.forEach(subscriber => subscriber(action, data));\r\n  }\r\n\r\n  handleKeys = e => {\r\n    e.preventDefault();\r\n    switch (e.keyCode) {\r\n      case 32:\r\n        this.broadcast('open', true);\r\n      case 37:\r\n        this.broadcast('move', { x: -1, y: 0});\r\n        break;\r\n      case 38:\r\n        this.broadcast('move', { x: 0, y: -1});\r\n        break;\r\n      case 39:\r\n        this.broadcast('move', { x: 1, y: 0});\r\n        break;\r\n      case 40:\r\n        this.broadcast('move', { x: 0, y: 1});\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  bindKeys() {\r\n    document.addEventListener('keydown', this.handleKeys);\r\n  }\r\n\r\n  unbindKeys() {\r\n    document.removeEventListener('keydown', this.handleKeys);\r\n  }\r\n}\r\n\r\nexport default InputManager;","C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\NPCs\\Player.js",[],"C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\World\\World.js",[],"C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\World\\Spawner.js",[],"C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\Objects\\Loot.js",[],"C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\World\\Entity.js",[],"C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\NPCs\\Monster.js",[],"C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\Config\\levelConstants.js",[],"C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\Config\\monsterTable.js",[],"C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\Config\\lootTable.js",[],"C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\Objects\\Stairs.js",[],"C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\utilities\\damageCalculator.js",["78"],"export default function(attack, defense) {\r\n  let result = attack - defense;\r\n  if (result < 0) {\r\n    (Math.random() * 2) < 1 ? result = 1 : result = 0; \r\n  }\r\n  return result;\r\n}","C:\\Users\\public\\documents\\Projects_Web_Programming\\hooks-roguelike-tutorial\\src\\ui\\Menu.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":70,"column":6,"nodeType":"85","endLine":70,"endColumn":8,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":21,"column":7,"nodeType":"89","messageId":"90","endLine":23,"endColumn":15},{"ruleId":"91","severity":1,"message":"92","line":1,"column":1,"nodeType":"93","endLine":7,"endColumn":2},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'world'. Either include it or remove the dependency array.","ArrayExpression",["96"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [world]",{"range":"99","text":"100"},[2350,2352],"[world]"]